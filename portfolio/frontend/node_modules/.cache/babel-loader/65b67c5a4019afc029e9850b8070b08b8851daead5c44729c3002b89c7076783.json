{"ast":null,"code":"var _jsxFileName = \"/home/labber/portfolio/frontend/src/components/NavigationBar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { AppBar, Toolbar, IconButton, Typography, Drawer, List, ListItem, ListItemText, makeStyles } from '@mui/material';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  },\n  drawerPaper: {\n    width: '250px'\n  }\n}));\nfunction NavigationBar() {\n  _s();\n  const classes = useStyles();\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const toggleDrawer = open => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    setDrawerOpen(open);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"start\",\n          className: classes.menuButton,\n          color: \"inherit\",\n          \"aria-label\": \"menu\",\n          onClick: toggleDrawer(true),\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          className: classes.title,\n          children: \"Daniel Destefanis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      anchor: \"left\",\n      open: drawerOpen,\n      onClose: toggleDrawer(false),\n      classes: {\n        paper: classes.drawerPaper\n      },\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          onClick: toggleDrawer(false),\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(NavigationBar, \"bewkY3C/B40EtijVVG4CPuXC0i0=\", false, function () {\n  return [useStyles];\n});\n_c = NavigationBar;\nexport default NavigationBar;\nvar _c;\n$RefreshReg$(_c, \"NavigationBar\");","map":{"version":3,"names":["React","useState","AppBar","Toolbar","IconButton","Typography","Drawer","List","ListItem","ListItemText","makeStyles","MenuIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","useStyles","theme","menuButton","marginRight","spacing","title","flexGrow","drawerPaper","width","NavigationBar","_s","classes","drawerOpen","setDrawerOpen","toggleDrawer","open","event","type","key","children","position","edge","className","color","onClick","fileName","_jsxFileName","lineNumber","columnNumber","variant","anchor","onClose","paper","button","primary","_c","$RefreshReg$"],"sources":["/home/labber/portfolio/frontend/src/components/NavigationBar.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { AppBar, Toolbar, IconButton, Typography, Drawer, List, ListItem, ListItemText, makeStyles } from '@mui/material';\nimport MenuIcon from '@mui/icons-material/Menu';\n\nconst useStyles = makeStyles((theme) => ({\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    width: '250px',\n  },\n}));\n\nfunction NavigationBar() {\n  const classes = useStyles();\n  const [drawerOpen, setDrawerOpen] = useState(false);\n\n  const toggleDrawer = (open) => (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    setDrawerOpen(open);\n  };\n\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={toggleDrawer(true)}>\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Daniel Destefanis\n          </Typography>\n          {/* Other toolbar items */}\n        </Toolbar>\n      </AppBar>\n      <Drawer anchor=\"left\" open={drawerOpen} onClose={toggleDrawer(false)} classes={{ paper: classes.drawerPaper }}>\n        <List>\n          {/* Add ListItem components for each navigation link */}\n          <ListItem button onClick={toggleDrawer(false)}>\n            <ListItemText primary=\"Home\" />\n          </ListItem>\n          {/* Repeat for other navigation items */}\n        </List>\n      </Drawer>\n    </>\n  );\n}\n\nexport default NavigationBar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}